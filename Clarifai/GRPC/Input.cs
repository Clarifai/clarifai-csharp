// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/clarifai/api/input.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Clarifai.Internal.GRPC {

  /// <summary>Holder for reflection information generated from proto/clarifai/api/input.proto</summary>
  public static partial class InputReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/clarifai/api/input.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InputReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90by9jbGFyaWZhaS9hcGkvaW5wdXQucHJvdG8SDGNsYXJpZmFpLmFw",
            "aRofcHJvdG8vY2xhcmlmYWkvYXBpL2NvbW1vbi5wcm90bxogcHJvdG8vY2xh",
            "cmlmYWkvYXBpL2NvbmNlcHQucHJvdG8aHXByb3RvL2NsYXJpZmFpL2FwaS9k",
            "YXRhLnByb3RvGiFwcm90by9jbGFyaWZhaS9hcGkvZmVlZGJhY2sucHJvdG8a",
            "HnByb3RvL2NsYXJpZmFpL2FwaS9tb2RlbC5wcm90bxomcHJvdG8vY2xhcmlm",
            "YWkvYXBpL3N0YXR1cy9zdGF0dXMucHJvdG8aKXByb3RvL2NsYXJpZmFpL2Fw",
            "aS91dGlscy9leHRlbnNpb25zLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvIvYBCgVJbnB1dBIKCgJpZBgBIAEoCRIgCgRkYXRhGAIg",
            "ASgLMhIuY2xhcmlmYWkuYXBpLkRhdGESMQoNZmVlZGJhY2tfaW5mbxgDIAEo",
            "CzIaLmNsYXJpZmFpLmFwaS5GZWVkYmFja0luZm8SLgoKY3JlYXRlZF9hdBgE",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLbW9kaWZpZWRf",
            "YXQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEisKBnN0YXR1",
            "cxgGIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzIlQKD0dldElu",
            "cHV0UmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFw",
            "aS5Vc2VyQXBwSURTZXQSEAoIaW5wdXRfaWQYAiABKAkicQoRTGlzdElucHV0",
            "c1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGku",
            "VXNlckFwcElEU2V0EgwKBHBhZ2UYAiABKA0SEAoIcGVyX3BhZ2UYAyABKA0S",
            "CwoDaWRzGAQgAygJIn0KE1N0cmVhbUlucHV0c1JlcXVlc3QSLwoLdXNlcl9h",
            "cHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCHBl",
            "cl9wYWdlGAIgASgNEg8KB2xhc3RfaWQYAyABKAkSEgoKZGVzY2VuZGluZxgE",
            "IAEoCCJpChFQb3N0SW5wdXRzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEo",
            "CzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSIwoGaW5wdXRzGAIgAygL",
            "MhMuY2xhcmlmYWkuYXBpLklucHV0InoKElBhdGNoSW5wdXRzUmVxdWVzdBIv",
            "Cgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURT",
            "ZXQSIwoGaW5wdXRzGAIgAygLMhMuY2xhcmlmYWkuYXBpLklucHV0Eg4KBmFj",
            "dGlvbhgDIAEoCSJXChJEZWxldGVJbnB1dFJlcXVlc3QSLwoLdXNlcl9hcHBf",
            "aWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCGlucHV0",
            "X2lkGAIgASgJImcKE0RlbGV0ZUlucHV0c1JlcXVlc3QSLwoLdXNlcl9hcHBf",
            "aWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EgsKA2lkcxgC",
            "IAMoCRISCgpkZWxldGVfYWxsGAMgASgIIpUBChhQb3N0TW9kZWxGZWVkYmFj",
            "a1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGku",
            "VXNlckFwcElEU2V0EhAKCG1vZGVsX2lkGAIgASgJEhIKCnZlcnNpb25faWQY",
            "AyABKAkSIgoFaW5wdXQYBCABKAsyEy5jbGFyaWZhaS5hcGkuSW5wdXQiZgoT",
            "U2luZ2xlSW5wdXRSZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZh",
            "aS5hcGkuc3RhdHVzLlN0YXR1cxIiCgVpbnB1dBgCIAEoCzITLmNsYXJpZmFp",
            "LmFwaS5JbnB1dCJsChJNdWx0aUlucHV0UmVzcG9uc2USKwoGc3RhdHVzGAEg",
            "ASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSKQoGaW5wdXRzGAIg",
            "AygLMhMuY2xhcmlmYWkuYXBpLklucHV0QgSAtRgBIm8KCklucHV0Q291bnQS",
            "FwoJcHJvY2Vzc2VkGAEgASgNQgSAtRgBEhgKCnRvX3Byb2Nlc3MYAiABKA1C",
            "BIC1GAESFAoGZXJyb3JzGAMgASgNQgSAtRgBEhgKCnByb2Nlc3NpbmcYBCAB",
            "KA1CBIC1GAEicQoYU2luZ2xlSW5wdXRDb3VudFJlc3BvbnNlEisKBnN0YXR1",
            "cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEigKBmNvdW50",
            "cxgCIAEoCzIYLmNsYXJpZmFpLmFwaS5JbnB1dENvdW50IkcKFEdldElucHV0",
            "Q291bnRSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWku",
            "YXBpLlVzZXJBcHBJRFNldCK5AQoXUG9zdE1vZGVsT3V0cHV0c1JlcXVlc3QS",
            "LwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElE",
            "U2V0EhAKCG1vZGVsX2lkGAIgASgJEhIKCnZlcnNpb25faWQYAyABKAkSIwoG",
            "aW5wdXRzGAQgAygLMhMuY2xhcmlmYWkuYXBpLklucHV0EiIKBW1vZGVsGAUg",
            "ASgLMhMuY2xhcmlmYWkuYXBpLk1vZGVsIo8BChZMaXN0TW9kZWxJbnB1dHNS",
            "ZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVz",
            "ZXJBcHBJRFNldBIQCghtb2RlbF9pZBgCIAEoCRISCgp2ZXJzaW9uX2lkGAMg",
            "ASgJEgwKBHBhZ2UYBCABKA0SEAoIcGVyX3BhZ2UYBSABKA1CWgobY2xhcmlm",
            "YWkyLmludGVybmFsLmdycGMuYXBpWgNhcGmiAgRDQUlQqgIWQ2xhcmlmYWku",
            "SW50ZXJuYWwuR1JQQ8ICAV/KAhFDbGFyaWZhaVxJbnRlcm5hbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Clarifai.Internal.GRPC.CommonReflection.Descriptor, global::Clarifai.Internal.GRPC.ConceptReflection.Descriptor, global::Clarifai.Internal.GRPC.DataReflection.Descriptor, global::Clarifai.Internal.GRPC.FeedbackReflection.Descriptor, global::Clarifai.Internal.GRPC.ModelReflection.Descriptor, global::Clarifai.Internal.GRPC.Status.StatusReflection.Descriptor, global::Clarifai.Internal.GRPC.Utils.ExtensionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.Input), global::Clarifai.Internal.GRPC.Input.Parser, new[]{ "Id", "Data", "FeedbackInfo", "CreatedAt", "ModifiedAt", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.GetInputRequest), global::Clarifai.Internal.GRPC.GetInputRequest.Parser, new[]{ "UserAppId", "InputId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.ListInputsRequest), global::Clarifai.Internal.GRPC.ListInputsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage", "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.StreamInputsRequest), global::Clarifai.Internal.GRPC.StreamInputsRequest.Parser, new[]{ "UserAppId", "PerPage", "LastId", "Descending" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.PostInputsRequest), global::Clarifai.Internal.GRPC.PostInputsRequest.Parser, new[]{ "UserAppId", "Inputs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.PatchInputsRequest), global::Clarifai.Internal.GRPC.PatchInputsRequest.Parser, new[]{ "UserAppId", "Inputs", "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.DeleteInputRequest), global::Clarifai.Internal.GRPC.DeleteInputRequest.Parser, new[]{ "UserAppId", "InputId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.DeleteInputsRequest), global::Clarifai.Internal.GRPC.DeleteInputsRequest.Parser, new[]{ "UserAppId", "Ids", "DeleteAll" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.PostModelFeedbackRequest), global::Clarifai.Internal.GRPC.PostModelFeedbackRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "Input" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.SingleInputResponse), global::Clarifai.Internal.GRPC.SingleInputResponse.Parser, new[]{ "Status", "Input" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.MultiInputResponse), global::Clarifai.Internal.GRPC.MultiInputResponse.Parser, new[]{ "Status", "Inputs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.InputCount), global::Clarifai.Internal.GRPC.InputCount.Parser, new[]{ "Processed", "ToProcess", "Errors", "Processing" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.SingleInputCountResponse), global::Clarifai.Internal.GRPC.SingleInputCountResponse.Parser, new[]{ "Status", "Counts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.GetInputCountRequest), global::Clarifai.Internal.GRPC.GetInputCountRequest.Parser, new[]{ "UserAppId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.PostModelOutputsRequest), global::Clarifai.Internal.GRPC.PostModelOutputsRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "Inputs", "Model" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.ListModelInputsRequest), global::Clarifai.Internal.GRPC.ListModelInputsRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "Page", "PerPage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Input : pb::IMessage<Input> {
    private static readonly pb::MessageParser<Input> _parser = new pb::MessageParser<Input>(() => new Input());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Input> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Input() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Input(Input other) : this() {
      id_ = other.id_;
      Data = other.data_ != null ? other.Data.Clone() : null;
      FeedbackInfo = other.feedbackInfo_ != null ? other.FeedbackInfo.Clone() : null;
      CreatedAt = other.createdAt_ != null ? other.CreatedAt.Clone() : null;
      ModifiedAt = other.modifiedAt_ != null ? other.ModifiedAt.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Input Clone() {
      return new Input(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.Data data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Data Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "feedback_info" field.</summary>
    public const int FeedbackInfoFieldNumber = 3;
    private global::Clarifai.Internal.GRPC.FeedbackInfo feedbackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.FeedbackInfo FeedbackInfo {
      get { return feedbackInfo_; }
      set {
        feedbackInfo_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "modified_at" field.</summary>
    public const int ModifiedAtFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp modifiedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ModifiedAt {
      get { return modifiedAt_; }
      set {
        modifiedAt_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::Clarifai.Internal.GRPC.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Input);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Input other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(FeedbackInfo, other.FeedbackInfo)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (!object.Equals(ModifiedAt, other.ModifiedAt)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (feedbackInfo_ != null) hash ^= FeedbackInfo.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (modifiedAt_ != null) hash ^= ModifiedAt.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (feedbackInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FeedbackInfo);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreatedAt);
      }
      if (modifiedAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ModifiedAt);
      }
      if (status_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (feedbackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeedbackInfo);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (modifiedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModifiedAt);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Input other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Clarifai.Internal.GRPC.Data();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.feedbackInfo_ != null) {
        if (feedbackInfo_ == null) {
          feedbackInfo_ = new global::Clarifai.Internal.GRPC.FeedbackInfo();
        }
        FeedbackInfo.MergeFrom(other.FeedbackInfo);
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          createdAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.modifiedAt_ != null) {
        if (modifiedAt_ == null) {
          modifiedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ModifiedAt.MergeFrom(other.ModifiedAt);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Clarifai.Internal.GRPC.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (data_ == null) {
              data_ = new global::Clarifai.Internal.GRPC.Data();
            }
            input.ReadMessage(data_);
            break;
          }
          case 26: {
            if (feedbackInfo_ == null) {
              feedbackInfo_ = new global::Clarifai.Internal.GRPC.FeedbackInfo();
            }
            input.ReadMessage(feedbackInfo_);
            break;
          }
          case 34: {
            if (createdAt_ == null) {
              createdAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createdAt_);
            break;
          }
          case 42: {
            if (modifiedAt_ == null) {
              modifiedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(modifiedAt_);
            break;
          }
          case 50: {
            if (status_ == null) {
              status_ = new global::Clarifai.Internal.GRPC.Status.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInputRequest : pb::IMessage<GetInputRequest> {
    private static readonly pb::MessageParser<GetInputRequest> _parser = new pb::MessageParser<GetInputRequest>(() => new GetInputRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInputRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputRequest(GetInputRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      inputId_ = other.inputId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputRequest Clone() {
      return new GetInputRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "input_id" field.</summary>
    public const int InputIdFieldNumber = 2;
    private string inputId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputId {
      get { return inputId_; }
      set {
        inputId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInputRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInputRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (InputId != other.InputId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (InputId.Length != 0) hash ^= InputId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (InputId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InputId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (InputId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInputRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.InputId.Length != 0) {
        InputId = other.InputId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            InputId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListInputsRequest : pb::IMessage<ListInputsRequest> {
    private static readonly pb::MessageParser<ListInputsRequest> _parser = new pb::MessageParser<ListInputsRequest>(() => new ListInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInputsRequest(ListInputsRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInputsRequest Clone() {
      return new ListInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 34: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamInputsRequest : pb::IMessage<StreamInputsRequest> {
    private static readonly pb::MessageParser<StreamInputsRequest> _parser = new pb::MessageParser<StreamInputsRequest>(() => new StreamInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInputsRequest(StreamInputsRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      perPage_ = other.perPage_;
      lastId_ = other.lastId_;
      descending_ = other.descending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInputsRequest Clone() {
      return new StreamInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 2;
    private uint perPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "last_id" field.</summary>
    public const int LastIdFieldNumber = 3;
    private string lastId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastId {
      get { return lastId_; }
      set {
        lastId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descending" field.</summary>
    public const int DescendingFieldNumber = 4;
    private bool descending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Descending {
      get { return descending_; }
      set {
        descending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (PerPage != other.PerPage) return false;
      if (LastId != other.LastId) return false;
      if (Descending != other.Descending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (LastId.Length != 0) hash ^= LastId.GetHashCode();
      if (Descending != false) hash ^= Descending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (PerPage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PerPage);
      }
      if (LastId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastId);
      }
      if (Descending != false) {
        output.WriteRawTag(32);
        output.WriteBool(Descending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (LastId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastId);
      }
      if (Descending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      if (other.LastId.Length != 0) {
        LastId = other.LastId;
      }
      if (other.Descending != false) {
        Descending = other.Descending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 16: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 26: {
            LastId = input.ReadString();
            break;
          }
          case 32: {
            Descending = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostInputsRequest : pb::IMessage<PostInputsRequest> {
    private static readonly pb::MessageParser<PostInputsRequest> _parser = new pb::MessageParser<PostInputsRequest>(() => new PostInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsRequest(PostInputsRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      inputs_ = other.inputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsRequest Clone() {
      return new PostInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Internal.GRPC.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> Inputs {
      get { return inputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      inputs_.Add(other.inputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchInputsRequest : pb::IMessage<PatchInputsRequest> {
    private static readonly pb::MessageParser<PatchInputsRequest> _parser = new pb::MessageParser<PatchInputsRequest>(() => new PatchInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchInputsRequest(PatchInputsRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      inputs_ = other.inputs_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchInputsRequest Clone() {
      return new PatchInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Internal.GRPC.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      inputs_.Add(other.inputs_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteInputRequest : pb::IMessage<DeleteInputRequest> {
    private static readonly pb::MessageParser<DeleteInputRequest> _parser = new pb::MessageParser<DeleteInputRequest>(() => new DeleteInputRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInputRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputRequest(DeleteInputRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      inputId_ = other.inputId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputRequest Clone() {
      return new DeleteInputRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "input_id" field.</summary>
    public const int InputIdFieldNumber = 2;
    private string inputId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputId {
      get { return inputId_; }
      set {
        inputId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInputRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInputRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (InputId != other.InputId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (InputId.Length != 0) hash ^= InputId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (InputId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InputId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (InputId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInputRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.InputId.Length != 0) {
        InputId = other.InputId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            InputId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteInputsRequest : pb::IMessage<DeleteInputsRequest> {
    private static readonly pb::MessageParser<DeleteInputsRequest> _parser = new pb::MessageParser<DeleteInputsRequest>(() => new DeleteInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputsRequest(DeleteInputsRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      ids_ = other.ids_.Clone();
      deleteAll_ = other.deleteAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputsRequest Clone() {
      return new DeleteInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "delete_all" field.</summary>
    public const int DeleteAllFieldNumber = 3;
    private bool deleteAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteAll {
      get { return deleteAll_; }
      set {
        deleteAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      if (DeleteAll != other.DeleteAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (DeleteAll != false) hash ^= DeleteAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (DeleteAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(DeleteAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (DeleteAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      if (other.DeleteAll != false) {
        DeleteAll = other.DeleteAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 24: {
            DeleteAll = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostModelFeedbackRequest : pb::IMessage<PostModelFeedbackRequest> {
    private static readonly pb::MessageParser<PostModelFeedbackRequest> _parser = new pb::MessageParser<PostModelFeedbackRequest>(() => new PostModelFeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostModelFeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelFeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelFeedbackRequest(PostModelFeedbackRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      Input = other.input_ != null ? other.Input.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelFeedbackRequest Clone() {
      return new PostModelFeedbackRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 4;
    private global::Clarifai.Internal.GRPC.Input input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Input Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostModelFeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostModelFeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (!object.Equals(Input, other.Input)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      if (input_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostModelFeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Clarifai.Internal.GRPC.Input();
        }
        Input.MergeFrom(other.Input);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 34: {
            if (input_ == null) {
              input_ = new global::Clarifai.Internal.GRPC.Input();
            }
            input.ReadMessage(input_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleInputResponse : pb::IMessage<SingleInputResponse> {
    private static readonly pb::MessageParser<SingleInputResponse> _parser = new pb::MessageParser<SingleInputResponse>(() => new SingleInputResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleInputResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputResponse(SingleInputResponse other) : this() {
      Status = other.status_ != null ? other.Status.Clone() : null;
      Input = other.input_ != null ? other.Input.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputResponse Clone() {
      return new SingleInputResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.Input input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Input Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleInputResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleInputResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleInputResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Clarifai.Internal.GRPC.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Clarifai.Internal.GRPC.Input();
        }
        Input.MergeFrom(other.Input);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::Clarifai.Internal.GRPC.Status.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 18: {
            if (input_ == null) {
              input_ = new global::Clarifai.Internal.GRPC.Input();
            }
            input.ReadMessage(input_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiInputResponse : pb::IMessage<MultiInputResponse> {
    private static readonly pb::MessageParser<MultiInputResponse> _parser = new pb::MessageParser<MultiInputResponse>(() => new MultiInputResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiInputResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputResponse(MultiInputResponse other) : this() {
      Status = other.status_ != null ? other.Status.Clone() : null;
      inputs_ = other.inputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputResponse Clone() {
      return new MultiInputResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Internal.GRPC.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> Inputs {
      get { return inputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiInputResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiInputResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiInputResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Clarifai.Internal.GRPC.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      inputs_.Add(other.inputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::Clarifai.Internal.GRPC.Status.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InputCount : pb::IMessage<InputCount> {
    private static readonly pb::MessageParser<InputCount> _parser = new pb::MessageParser<InputCount>(() => new InputCount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputCount(InputCount other) : this() {
      processed_ = other.processed_;
      toProcess_ = other.toProcess_;
      errors_ = other.errors_;
      processing_ = other.processing_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputCount Clone() {
      return new InputCount(this);
    }

    /// <summary>Field number for the "processed" field.</summary>
    public const int ProcessedFieldNumber = 1;
    private uint processed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Processed {
      get { return processed_; }
      set {
        processed_ = value;
      }
    }

    /// <summary>Field number for the "to_process" field.</summary>
    public const int ToProcessFieldNumber = 2;
    private uint toProcess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ToProcess {
      get { return toProcess_; }
      set {
        toProcess_ = value;
      }
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 3;
    private uint errors_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Errors {
      get { return errors_; }
      set {
        errors_ = value;
      }
    }

    /// <summary>Field number for the "processing" field.</summary>
    public const int ProcessingFieldNumber = 4;
    private uint processing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Processing {
      get { return processing_; }
      set {
        processing_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Processed != other.Processed) return false;
      if (ToProcess != other.ToProcess) return false;
      if (Errors != other.Errors) return false;
      if (Processing != other.Processing) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Processed != 0) hash ^= Processed.GetHashCode();
      if (ToProcess != 0) hash ^= ToProcess.GetHashCode();
      if (Errors != 0) hash ^= Errors.GetHashCode();
      if (Processing != 0) hash ^= Processing.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Processed != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Processed);
      }
      if (ToProcess != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ToProcess);
      }
      if (Errors != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Errors);
      }
      if (Processing != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Processing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Processed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Processed);
      }
      if (ToProcess != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ToProcess);
      }
      if (Errors != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Errors);
      }
      if (Processing != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Processing);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputCount other) {
      if (other == null) {
        return;
      }
      if (other.Processed != 0) {
        Processed = other.Processed;
      }
      if (other.ToProcess != 0) {
        ToProcess = other.ToProcess;
      }
      if (other.Errors != 0) {
        Errors = other.Errors;
      }
      if (other.Processing != 0) {
        Processing = other.Processing;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Processed = input.ReadUInt32();
            break;
          }
          case 16: {
            ToProcess = input.ReadUInt32();
            break;
          }
          case 24: {
            Errors = input.ReadUInt32();
            break;
          }
          case 32: {
            Processing = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleInputCountResponse : pb::IMessage<SingleInputCountResponse> {
    private static readonly pb::MessageParser<SingleInputCountResponse> _parser = new pb::MessageParser<SingleInputCountResponse>(() => new SingleInputCountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleInputCountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputCountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputCountResponse(SingleInputCountResponse other) : this() {
      Status = other.status_ != null ? other.Status.Clone() : null;
      Counts = other.counts_ != null ? other.Counts.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputCountResponse Clone() {
      return new SingleInputCountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "counts" field.</summary>
    public const int CountsFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.InputCount counts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.InputCount Counts {
      get { return counts_; }
      set {
        counts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleInputCountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleInputCountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Counts, other.Counts)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (counts_ != null) hash ^= Counts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (counts_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Counts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (counts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Counts);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleInputCountResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Clarifai.Internal.GRPC.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.counts_ != null) {
        if (counts_ == null) {
          counts_ = new global::Clarifai.Internal.GRPC.InputCount();
        }
        Counts.MergeFrom(other.Counts);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::Clarifai.Internal.GRPC.Status.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 18: {
            if (counts_ == null) {
              counts_ = new global::Clarifai.Internal.GRPC.InputCount();
            }
            input.ReadMessage(counts_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInputCountRequest : pb::IMessage<GetInputCountRequest> {
    private static readonly pb::MessageParser<GetInputCountRequest> _parser = new pb::MessageParser<GetInputCountRequest>(() => new GetInputCountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInputCountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputCountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputCountRequest(GetInputCountRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputCountRequest Clone() {
      return new GetInputCountRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInputCountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInputCountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInputCountRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostModelOutputsRequest : pb::IMessage<PostModelOutputsRequest> {
    private static readonly pb::MessageParser<PostModelOutputsRequest> _parser = new pb::MessageParser<PostModelOutputsRequest>(() => new PostModelOutputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostModelOutputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelOutputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelOutputsRequest(PostModelOutputsRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      inputs_ = other.inputs_.Clone();
      Model = other.model_ != null ? other.Model.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelOutputsRequest Clone() {
      return new PostModelOutputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(34, global::Clarifai.Internal.GRPC.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.Input> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 5;
    private global::Clarifai.Internal.GRPC.Model model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostModelOutputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostModelOutputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (model_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostModelOutputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      inputs_.Add(other.inputs_);
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::Clarifai.Internal.GRPC.Model();
        }
        Model.MergeFrom(other.Model);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 34: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 42: {
            if (model_ == null) {
              model_ = new global::Clarifai.Internal.GRPC.Model();
            }
            input.ReadMessage(model_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListModelInputsRequest : pb::IMessage<ListModelInputsRequest> {
    private static readonly pb::MessageParser<ListModelInputsRequest> _parser = new pb::MessageParser<ListModelInputsRequest>(() => new ListModelInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListModelInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.InputReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelInputsRequest(ListModelInputsRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelInputsRequest Clone() {
      return new ListModelInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 4;
    private uint page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 5;
    private uint perPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListModelInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListModelInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      if (Page != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListModelInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 32: {
            Page = input.ReadUInt32();
            break;
          }
          case 40: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
