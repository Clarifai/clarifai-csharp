// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/clarifai/api/geo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Clarifai.Internal.GRPC {

  /// <summary>Holder for reflection information generated from proto/clarifai/api/geo.proto</summary>
  public static partial class GeoReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/clarifai/api/geo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxwcm90by9jbGFyaWZhaS9hcGkvZ2VvLnByb3RvEgxjbGFyaWZhaS5hcGka",
            "KXByb3RvL2NsYXJpZmFpL2FwaS91dGlscy9leHRlbnNpb25zLnByb3RvIjsK",
            "CEdlb1BvaW50EhcKCWxvbmdpdHVkZRgBIAEoAkIEgLUYARIWCghsYXRpdHVk",
            "ZRgCIAEoAkIEgLUYASItCghHZW9MaW1pdBIMCgR0eXBlGAEgASgJEhMKBXZh",
            "bHVlGAIgASgCQgSAtRgBIjoKDUdlb0JveGVkUG9pbnQSKQoJZ2VvX3BvaW50",
            "GAEgASgLMhYuY2xhcmlmYWkuYXBpLkdlb1BvaW50IokBCgNHZW8SKQoJZ2Vv",
            "X3BvaW50GAEgASgLMhYuY2xhcmlmYWkuYXBpLkdlb1BvaW50EikKCWdlb19s",
            "aW1pdBgCIAEoCzIWLmNsYXJpZmFpLmFwaS5HZW9MaW1pdBIsCgdnZW9fYm94",
            "GAMgAygLMhsuY2xhcmlmYWkuYXBpLkdlb0JveGVkUG9pbnRCWgobY2xhcmlm",
            "YWkyLmludGVybmFsLmdycGMuYXBpWgNhcGmiAgRDQUlQqgIWQ2xhcmlmYWku",
            "SW50ZXJuYWwuR1JQQ8ICAV/KAhFDbGFyaWZhaVxJbnRlcm5hbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Clarifai.Internal.GRPC.Utils.ExtensionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.GeoPoint), global::Clarifai.Internal.GRPC.GeoPoint.Parser, new[]{ "Longitude", "Latitude" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.GeoLimit), global::Clarifai.Internal.GRPC.GeoLimit.Parser, new[]{ "Type", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.GeoBoxedPoint), global::Clarifai.Internal.GRPC.GeoBoxedPoint.Parser, new[]{ "GeoPoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.Geo), global::Clarifai.Internal.GRPC.Geo.Parser, new[]{ "GeoPoint", "GeoLimit", "GeoBox" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GeoPoint : pb::IMessage<GeoPoint> {
    private static readonly pb::MessageParser<GeoPoint> _parser = new pb::MessageParser<GeoPoint>(() => new GeoPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.GeoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoPoint(GeoPoint other) : this() {
      longitude_ = other.longitude_;
      latitude_ = other.latitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoPoint Clone() {
      return new GeoPoint(this);
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 1;
    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 2;
    private float latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      if (Latitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Longitude != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Longitude);
      }
      if (Latitude != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Latitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Longitude != 0F) {
        size += 1 + 4;
      }
      if (Latitude != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoPoint other) {
      if (other == null) {
        return;
      }
      if (other.Longitude != 0F) {
        Longitude = other.Longitude;
      }
      if (other.Latitude != 0F) {
        Latitude = other.Latitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Longitude = input.ReadFloat();
            break;
          }
          case 21: {
            Latitude = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GeoLimit : pb::IMessage<GeoLimit> {
    private static readonly pb::MessageParser<GeoLimit> _parser = new pb::MessageParser<GeoLimit>(() => new GeoLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.GeoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoLimit(GeoLimit other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoLimit Clone() {
      return new GeoLimit(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoLimit other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GeoBoxedPoint : pb::IMessage<GeoBoxedPoint> {
    private static readonly pb::MessageParser<GeoBoxedPoint> _parser = new pb::MessageParser<GeoBoxedPoint>(() => new GeoBoxedPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoBoxedPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.GeoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoBoxedPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoBoxedPoint(GeoBoxedPoint other) : this() {
      GeoPoint = other.geoPoint_ != null ? other.GeoPoint.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoBoxedPoint Clone() {
      return new GeoBoxedPoint(this);
    }

    /// <summary>Field number for the "geo_point" field.</summary>
    public const int GeoPointFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.GeoPoint geoPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.GeoPoint GeoPoint {
      get { return geoPoint_; }
      set {
        geoPoint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoBoxedPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoBoxedPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GeoPoint, other.GeoPoint)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (geoPoint_ != null) hash ^= GeoPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (geoPoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GeoPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (geoPoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoBoxedPoint other) {
      if (other == null) {
        return;
      }
      if (other.geoPoint_ != null) {
        if (geoPoint_ == null) {
          geoPoint_ = new global::Clarifai.Internal.GRPC.GeoPoint();
        }
        GeoPoint.MergeFrom(other.GeoPoint);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (geoPoint_ == null) {
              geoPoint_ = new global::Clarifai.Internal.GRPC.GeoPoint();
            }
            input.ReadMessage(geoPoint_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Geo : pb::IMessage<Geo> {
    private static readonly pb::MessageParser<Geo> _parser = new pb::MessageParser<Geo>(() => new Geo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Geo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.GeoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Geo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Geo(Geo other) : this() {
      GeoPoint = other.geoPoint_ != null ? other.GeoPoint.Clone() : null;
      GeoLimit = other.geoLimit_ != null ? other.GeoLimit.Clone() : null;
      geoBox_ = other.geoBox_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Geo Clone() {
      return new Geo(this);
    }

    /// <summary>Field number for the "geo_point" field.</summary>
    public const int GeoPointFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.GeoPoint geoPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.GeoPoint GeoPoint {
      get { return geoPoint_; }
      set {
        geoPoint_ = value;
      }
    }

    /// <summary>Field number for the "geo_limit" field.</summary>
    public const int GeoLimitFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.GeoLimit geoLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.GeoLimit GeoLimit {
      get { return geoLimit_; }
      set {
        geoLimit_ = value;
      }
    }

    /// <summary>Field number for the "geo_box" field.</summary>
    public const int GeoBoxFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.GeoBoxedPoint> _repeated_geoBox_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Internal.GRPC.GeoBoxedPoint.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.GeoBoxedPoint> geoBox_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.GeoBoxedPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.GeoBoxedPoint> GeoBox {
      get { return geoBox_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Geo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Geo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GeoPoint, other.GeoPoint)) return false;
      if (!object.Equals(GeoLimit, other.GeoLimit)) return false;
      if(!geoBox_.Equals(other.geoBox_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (geoPoint_ != null) hash ^= GeoPoint.GetHashCode();
      if (geoLimit_ != null) hash ^= GeoLimit.GetHashCode();
      hash ^= geoBox_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (geoPoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GeoPoint);
      }
      if (geoLimit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GeoLimit);
      }
      geoBox_.WriteTo(output, _repeated_geoBox_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (geoPoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoPoint);
      }
      if (geoLimit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoLimit);
      }
      size += geoBox_.CalculateSize(_repeated_geoBox_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Geo other) {
      if (other == null) {
        return;
      }
      if (other.geoPoint_ != null) {
        if (geoPoint_ == null) {
          geoPoint_ = new global::Clarifai.Internal.GRPC.GeoPoint();
        }
        GeoPoint.MergeFrom(other.GeoPoint);
      }
      if (other.geoLimit_ != null) {
        if (geoLimit_ == null) {
          geoLimit_ = new global::Clarifai.Internal.GRPC.GeoLimit();
        }
        GeoLimit.MergeFrom(other.GeoLimit);
      }
      geoBox_.Add(other.geoBox_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (geoPoint_ == null) {
              geoPoint_ = new global::Clarifai.Internal.GRPC.GeoPoint();
            }
            input.ReadMessage(geoPoint_);
            break;
          }
          case 18: {
            if (geoLimit_ == null) {
              geoLimit_ = new global::Clarifai.Internal.GRPC.GeoLimit();
            }
            input.ReadMessage(geoLimit_);
            break;
          }
          case 26: {
            geoBox_.AddEntriesFrom(input, _repeated_geoBox_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
