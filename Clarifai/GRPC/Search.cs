// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/clarifai/api/search.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Clarifai.Internal.GRPC {

  /// <summary>Holder for reflection information generated from proto/clarifai/api/search.proto</summary>
  public static partial class SearchReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/clarifai/api/search.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SearchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9wcm90by9jbGFyaWZhaS9hcGkvc2VhcmNoLnByb3RvEgxjbGFyaWZhaS5h",
            "cGkaH3Byb3RvL2NsYXJpZmFpL2FwaS9jb21tb24ucHJvdG8aHnByb3RvL2Ns",
            "YXJpZmFpL2FwaS9pbnB1dC5wcm90bxofcHJvdG8vY2xhcmlmYWkvYXBpL291",
            "dHB1dC5wcm90bxomcHJvdG8vY2xhcmlmYWkvYXBpL3N0YXR1cy9zdGF0dXMu",
            "cHJvdG8aKXByb3RvL2NsYXJpZmFpL2FwaS91dGlscy9leHRlbnNpb25zLnBy",
            "b3RvGjBwcm90by9jbGFyaWZhaS91dGlscy9wYWdpbmF0aW9uL3BhZ2luYXRp",
            "b24ucHJvdG8iPgoDSGl0EhMKBXNjb3JlGAEgASgCQgSAtRgBEiIKBWlucHV0",
            "GAIgASgLMhMuY2xhcmlmYWkuYXBpLklucHV0Il8KA0FuZBIiCgVpbnB1dBgB",
            "IAEoCzITLmNsYXJpZmFpLmFwaS5JbnB1dBIkCgZvdXRwdXQYAiABKAsyFC5j",
            "bGFyaWZhaS5hcGkuT3V0cHV0Eg4KBm5lZ2F0ZRgDIAEoCCI6CgVRdWVyeRIf",
            "CgRhbmRzGAEgAygLMhEuY2xhcmlmYWkuYXBpLkFuZBIQCghsYW5ndWFnZRgC",
            "IAEoCSKtAQoTUG9zdFNlYXJjaGVzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgB",
            "IAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSIgoFcXVlcnkYAiAB",
            "KAsyEy5jbGFyaWZhaS5hcGkuUXVlcnkSLAoKcGFnaW5hdGlvbhgDIAEoCzIY",
            "LmNsYXJpZmFpLmFwaS5QYWdpbmF0aW9uEhMKC2JydXRlX2ZvcmNlGAQgASgI",
            "InAKGVBvc3RTZWFyY2hGZWVkYmFja1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQY",
            "ASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EiIKBWlucHV0GAIg",
            "ASgLMhMuY2xhcmlmYWkuYXBpLklucHV0InUKE011bHRpU2VhcmNoUmVzcG9u",
            "c2USKwoGc3RhdHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0",
            "dXMSCgoCaWQYAiABKAkSJQoEaGl0cxgDIAMoCzIRLmNsYXJpZmFpLmFwaS5I",
            "aXRCBIC1GAFCWgobY2xhcmlmYWkyLmludGVybmFsLmdycGMuYXBpWgNhcGmi",
            "AgRDQUlQqgIWQ2xhcmlmYWkuSW50ZXJuYWwuR1JQQ8ICAV/KAhFDbGFyaWZh",
            "aVxJbnRlcm5hbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Clarifai.Internal.GRPC.CommonReflection.Descriptor, global::Clarifai.Internal.GRPC.InputReflection.Descriptor, global::Clarifai.Internal.GRPC.OutputReflection.Descriptor, global::Clarifai.Internal.GRPC.Status.StatusReflection.Descriptor, global::Clarifai.Internal.GRPC.Utils.ExtensionsReflection.Descriptor, global::Clarifai.Internal.GRPC.PaginationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.Hit), global::Clarifai.Internal.GRPC.Hit.Parser, new[]{ "Score", "Input" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.And), global::Clarifai.Internal.GRPC.And.Parser, new[]{ "Input", "Output", "Negate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.Query), global::Clarifai.Internal.GRPC.Query.Parser, new[]{ "Ands", "Language" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.PostSearchesRequest), global::Clarifai.Internal.GRPC.PostSearchesRequest.Parser, new[]{ "UserAppId", "Query", "Pagination", "BruteForce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.PostSearchFeedbackRequest), global::Clarifai.Internal.GRPC.PostSearchFeedbackRequest.Parser, new[]{ "UserAppId", "Input" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.MultiSearchResponse), global::Clarifai.Internal.GRPC.MultiSearchResponse.Parser, new[]{ "Status", "Id", "Hits" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Hit : pb::IMessage<Hit> {
    private static readonly pb::MessageParser<Hit> _parser = new pb::MessageParser<Hit>(() => new Hit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.SearchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hit(Hit other) : this() {
      score_ = other.score_;
      Input = other.input_ != null ? other.Input.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hit Clone() {
      return new Hit(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private float score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.Input input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Input Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      if (input_ != null) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hit other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Clarifai.Internal.GRPC.Input();
        }
        Input.MergeFrom(other.Input);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 18: {
            if (input_ == null) {
              input_ = new global::Clarifai.Internal.GRPC.Input();
            }
            input.ReadMessage(input_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class And : pb::IMessage<And> {
    private static readonly pb::MessageParser<And> _parser = new pb::MessageParser<And>(() => new And());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<And> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.SearchReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public And() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public And(And other) : this() {
      Input = other.input_ != null ? other.Input.Clone() : null;
      Output = other.output_ != null ? other.Output.Clone() : null;
      negate_ = other.negate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public And Clone() {
      return new And(this);
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.Input input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Input Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.Output output_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Output Output {
      get { return output_; }
      set {
        output_ = value;
      }
    }

    /// <summary>Field number for the "negate" field.</summary>
    public const int NegateFieldNumber = 3;
    private bool negate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Negate {
      get { return negate_; }
      set {
        negate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as And);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(And other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Input, other.Input)) return false;
      if (!object.Equals(Output, other.Output)) return false;
      if (Negate != other.Negate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (input_ != null) hash ^= Input.GetHashCode();
      if (output_ != null) hash ^= Output.GetHashCode();
      if (Negate != false) hash ^= Negate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (input_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Input);
      }
      if (output_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Output);
      }
      if (Negate != false) {
        output.WriteRawTag(24);
        output.WriteBool(Negate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (output_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (Negate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(And other) {
      if (other == null) {
        return;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Clarifai.Internal.GRPC.Input();
        }
        Input.MergeFrom(other.Input);
      }
      if (other.output_ != null) {
        if (output_ == null) {
          output_ = new global::Clarifai.Internal.GRPC.Output();
        }
        Output.MergeFrom(other.Output);
      }
      if (other.Negate != false) {
        Negate = other.Negate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (input_ == null) {
              input_ = new global::Clarifai.Internal.GRPC.Input();
            }
            input.ReadMessage(input_);
            break;
          }
          case 18: {
            if (output_ == null) {
              output_ = new global::Clarifai.Internal.GRPC.Output();
            }
            input.ReadMessage(output_);
            break;
          }
          case 24: {
            Negate = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.SearchReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      ands_ = other.ands_.Clone();
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "ands" field.</summary>
    public const int AndsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.And> _repeated_ands_codec
        = pb::FieldCodec.ForMessage(10, global::Clarifai.Internal.GRPC.And.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.And> ands_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.And>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.And> Ands {
      get { return ands_; }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 2;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ands_.Equals(other.ands_)) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ands_.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ands_.WriteTo(output, _repeated_ands_codec);
      if (Language.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ands_.CalculateSize(_repeated_ands_codec);
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      ands_.Add(other.ands_);
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ands_.AddEntriesFrom(input, _repeated_ands_codec);
            break;
          }
          case 18: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostSearchesRequest : pb::IMessage<PostSearchesRequest> {
    private static readonly pb::MessageParser<PostSearchesRequest> _parser = new pb::MessageParser<PostSearchesRequest>(() => new PostSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.SearchReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesRequest(PostSearchesRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      Query = other.query_ != null ? other.Query.Clone() : null;
      Pagination = other.pagination_ != null ? other.Pagination.Clone() : null;
      bruteForce_ = other.bruteForce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesRequest Clone() {
      return new PostSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.Query query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Query Query {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Clarifai.Internal.GRPC.Pagination pagination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    /// <summary>Field number for the "brute_force" field.</summary>
    public const int BruteForceFieldNumber = 4;
    private bool bruteForce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BruteForce {
      get { return bruteForce_; }
      set {
        bruteForce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(Query, other.Query)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      if (BruteForce != other.BruteForce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (query_ != null) hash ^= Query.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (BruteForce != false) hash ^= BruteForce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (query_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Query);
      }
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (BruteForce != false) {
        output.WriteRawTag(32);
        output.WriteBool(BruteForce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (BruteForce != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.query_ != null) {
        if (query_ == null) {
          query_ = new global::Clarifai.Internal.GRPC.Query();
        }
        Query.MergeFrom(other.Query);
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          pagination_ = new global::Clarifai.Internal.GRPC.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      if (other.BruteForce != false) {
        BruteForce = other.BruteForce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            if (query_ == null) {
              query_ = new global::Clarifai.Internal.GRPC.Query();
            }
            input.ReadMessage(query_);
            break;
          }
          case 26: {
            if (pagination_ == null) {
              pagination_ = new global::Clarifai.Internal.GRPC.Pagination();
            }
            input.ReadMessage(pagination_);
            break;
          }
          case 32: {
            BruteForce = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostSearchFeedbackRequest : pb::IMessage<PostSearchFeedbackRequest> {
    private static readonly pb::MessageParser<PostSearchFeedbackRequest> _parser = new pb::MessageParser<PostSearchFeedbackRequest>(() => new PostSearchFeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostSearchFeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.SearchReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchFeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchFeedbackRequest(PostSearchFeedbackRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      Input = other.input_ != null ? other.Input.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchFeedbackRequest Clone() {
      return new PostSearchFeedbackRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.Input input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Input Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostSearchFeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostSearchFeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostSearchFeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Clarifai.Internal.GRPC.Input();
        }
        Input.MergeFrom(other.Input);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            if (input_ == null) {
              input_ = new global::Clarifai.Internal.GRPC.Input();
            }
            input.ReadMessage(input_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiSearchResponse : pb::IMessage<MultiSearchResponse> {
    private static readonly pb::MessageParser<MultiSearchResponse> _parser = new pb::MessageParser<MultiSearchResponse>(() => new MultiSearchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiSearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.SearchReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiSearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiSearchResponse(MultiSearchResponse other) : this() {
      Status = other.status_ != null ? other.Status.Clone() : null;
      id_ = other.id_;
      hits_ = other.hits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiSearchResponse Clone() {
      return new MultiSearchResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.Hit> _repeated_hits_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Internal.GRPC.Hit.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.Hit> hits_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.Hit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.Hit> Hits {
      get { return hits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiSearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiSearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (Id != other.Id) return false;
      if(!hits_.Equals(other.hits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= hits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      hits_.WriteTo(output, _repeated_hits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += hits_.CalculateSize(_repeated_hits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiSearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Clarifai.Internal.GRPC.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      hits_.Add(other.hits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::Clarifai.Internal.GRPC.Status.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            hits_.AddEntriesFrom(input, _repeated_hits_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
