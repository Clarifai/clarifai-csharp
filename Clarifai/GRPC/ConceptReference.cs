// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/clarifai/api/concept_reference.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Clarifai.Internal.GRPC {

  /// <summary>Holder for reflection information generated from proto/clarifai/api/concept_reference.proto</summary>
  public static partial class ConceptReferenceReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/clarifai/api/concept_reference.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConceptReferenceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipwcm90by9jbGFyaWZhaS9hcGkvY29uY2VwdF9yZWZlcmVuY2UucHJvdG8S",
            "DGNsYXJpZmFpLmFwaRofcHJvdG8vY2xhcmlmYWkvYXBpL2NvbW1vbi5wcm90",
            "bxomcHJvdG8vY2xhcmlmYWkvYXBpL3N0YXR1cy9zdGF0dXMucHJvdG8aKXBy",
            "b3RvL2NsYXJpZmFpL2FwaS91dGlscy9leHRlbnNpb25zLnByb3RvIlUKEENv",
            "bmNlcHRSZWZlcmVuY2USCgoCaWQYASABKAkSDgoGc291cmNlGAIgASgJEhEK",
            "CXNvdXJjZV9pZBgDIAEoCRISCgpzb3VyY2VfdXJsGAQgASgJIoMBChxMaXN0",
            "Q29uY2VwdFJlZmVyZW5jZXNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgL",
            "MhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBISCgpjb25jZXB0X2lkGAIg",
            "ASgJEgwKBHBhZ2UYAyABKA0SEAoIcGVyX3BhZ2UYBCABKA0iiAEKHlNpbmds",
            "ZUNvbmNlcHRSZWZlcmVuY2VSZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5j",
            "bGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxI5ChFjb25jZXB0X3JlZmVyZW5j",
            "ZRgCIAEoCzIeLmNsYXJpZmFpLmFwaS5Db25jZXB0UmVmZXJlbmNlIo4BCh1N",
            "dWx0aUNvbmNlcHRSZWZlcmVuY2VSZXNwb25zZRIrCgZzdGF0dXMYASABKAsy",
            "Gy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxJAChJjb25jZXB0X3JlZmVy",
            "ZW5jZXMYAiADKAsyHi5jbGFyaWZhaS5hcGkuQ29uY2VwdFJlZmVyZW5jZUIE",
            "gLUYAUJaChtjbGFyaWZhaTIuaW50ZXJuYWwuZ3JwYy5hcGlaA2FwaaICBENB",
            "SVCqAhZDbGFyaWZhaS5JbnRlcm5hbC5HUlBDwgIBX8oCEUNsYXJpZmFpXElu",
            "dGVybmFsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Clarifai.Internal.GRPC.CommonReflection.Descriptor, global::Clarifai.Internal.GRPC.Status.StatusReflection.Descriptor, global::Clarifai.Internal.GRPC.Utils.ExtensionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.ConceptReference), global::Clarifai.Internal.GRPC.ConceptReference.Parser, new[]{ "Id", "Source", "SourceId", "SourceUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.ListConceptReferencesRequest), global::Clarifai.Internal.GRPC.ListConceptReferencesRequest.Parser, new[]{ "UserAppId", "ConceptId", "Page", "PerPage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.SingleConceptReferenceResponse), global::Clarifai.Internal.GRPC.SingleConceptReferenceResponse.Parser, new[]{ "Status", "ConceptReference" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Internal.GRPC.MultiConceptReferenceResponse), global::Clarifai.Internal.GRPC.MultiConceptReferenceResponse.Parser, new[]{ "Status", "ConceptReferences" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ConceptReference : pb::IMessage<ConceptReference> {
    private static readonly pb::MessageParser<ConceptReference> _parser = new pb::MessageParser<ConceptReference>(() => new ConceptReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConceptReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.ConceptReferenceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptReference(ConceptReference other) : this() {
      id_ = other.id_;
      source_ = other.source_;
      sourceId_ = other.sourceId_;
      sourceUrl_ = other.sourceUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptReference Clone() {
      return new ConceptReference(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_id" field.</summary>
    public const int SourceIdFieldNumber = 3;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_url" field.</summary>
    public const int SourceUrlFieldNumber = 4;
    private string sourceUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceUrl {
      get { return sourceUrl_; }
      set {
        sourceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConceptReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConceptReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Source != other.Source) return false;
      if (SourceId != other.SourceId) return false;
      if (SourceUrl != other.SourceUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (SourceUrl.Length != 0) hash ^= SourceUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (SourceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceId);
      }
      if (SourceUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (SourceUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConceptReference other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.SourceUrl.Length != 0) {
        SourceUrl = other.SourceUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 26: {
            SourceId = input.ReadString();
            break;
          }
          case 34: {
            SourceUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListConceptReferencesRequest : pb::IMessage<ListConceptReferencesRequest> {
    private static readonly pb::MessageParser<ListConceptReferencesRequest> _parser = new pb::MessageParser<ListConceptReferencesRequest>(() => new ListConceptReferencesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListConceptReferencesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.ConceptReferenceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptReferencesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptReferencesRequest(ListConceptReferencesRequest other) : this() {
      UserAppId = other.userAppId_ != null ? other.UserAppId.Clone() : null;
      conceptId_ = other.conceptId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptReferencesRequest Clone() {
      return new ListConceptReferencesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 3;
    private uint page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 4;
    private uint perPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListConceptReferencesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListConceptReferencesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      if (Page != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListConceptReferencesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              userAppId_ = new global::Clarifai.Internal.GRPC.UserAppIDSet();
            }
            input.ReadMessage(userAppId_);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 24: {
            Page = input.ReadUInt32();
            break;
          }
          case 32: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleConceptReferenceResponse : pb::IMessage<SingleConceptReferenceResponse> {
    private static readonly pb::MessageParser<SingleConceptReferenceResponse> _parser = new pb::MessageParser<SingleConceptReferenceResponse>(() => new SingleConceptReferenceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleConceptReferenceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.ConceptReferenceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptReferenceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptReferenceResponse(SingleConceptReferenceResponse other) : this() {
      Status = other.status_ != null ? other.Status.Clone() : null;
      ConceptReference = other.conceptReference_ != null ? other.ConceptReference.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptReferenceResponse Clone() {
      return new SingleConceptReferenceResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concept_reference" field.</summary>
    public const int ConceptReferenceFieldNumber = 2;
    private global::Clarifai.Internal.GRPC.ConceptReference conceptReference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.ConceptReference ConceptReference {
      get { return conceptReference_; }
      set {
        conceptReference_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleConceptReferenceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleConceptReferenceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(ConceptReference, other.ConceptReference)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (conceptReference_ != null) hash ^= ConceptReference.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (conceptReference_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConceptReference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (conceptReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConceptReference);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleConceptReferenceResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Clarifai.Internal.GRPC.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.conceptReference_ != null) {
        if (conceptReference_ == null) {
          conceptReference_ = new global::Clarifai.Internal.GRPC.ConceptReference();
        }
        ConceptReference.MergeFrom(other.ConceptReference);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::Clarifai.Internal.GRPC.Status.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 18: {
            if (conceptReference_ == null) {
              conceptReference_ = new global::Clarifai.Internal.GRPC.ConceptReference();
            }
            input.ReadMessage(conceptReference_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiConceptReferenceResponse : pb::IMessage<MultiConceptReferenceResponse> {
    private static readonly pb::MessageParser<MultiConceptReferenceResponse> _parser = new pb::MessageParser<MultiConceptReferenceResponse>(() => new MultiConceptReferenceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiConceptReferenceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Internal.GRPC.ConceptReferenceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptReferenceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptReferenceResponse(MultiConceptReferenceResponse other) : this() {
      Status = other.status_ != null ? other.Status.Clone() : null;
      conceptReferences_ = other.conceptReferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptReferenceResponse Clone() {
      return new MultiConceptReferenceResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Internal.GRPC.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Internal.GRPC.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concept_references" field.</summary>
    public const int ConceptReferencesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Internal.GRPC.ConceptReference> _repeated_conceptReferences_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Internal.GRPC.ConceptReference.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Internal.GRPC.ConceptReference> conceptReferences_ = new pbc::RepeatedField<global::Clarifai.Internal.GRPC.ConceptReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Internal.GRPC.ConceptReference> ConceptReferences {
      get { return conceptReferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiConceptReferenceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiConceptReferenceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!conceptReferences_.Equals(other.conceptReferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= conceptReferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      conceptReferences_.WriteTo(output, _repeated_conceptReferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += conceptReferences_.CalculateSize(_repeated_conceptReferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiConceptReferenceResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Clarifai.Internal.GRPC.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      conceptReferences_.Add(other.conceptReferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::Clarifai.Internal.GRPC.Status.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 18: {
            conceptReferences_.AddEntriesFrom(input, _repeated_conceptReferences_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
